---
title: Contributing
sortOrder: 4
---

Vexilla is an ambitious project that aims to solve a lot of use cases. There are several great ways to contribute to the project. We need help with our docs and issue triaging. We will also need a lot of help maintaining the core parts of the code.

## VCS-Provider support

Vexilla currently only supports GitHub as a git provider. We are currently planning to integrate with Bitbucket and GitLab as well. However, it would be nice to support even more providers. For git there is Azure Devops and Gitea, but maybe we could even support Mercurial or Subversion based services, too.


## Documentation

Contributing to the documentation is so easy. You can make it happen with translations for your native language. You can also create example projects for your specific tool or language. Lastly, phrasing is still a thing and we need help with that.

## Example Projects

There are plenty of ways to integrate Vexilla into your projects. We would love to see them. We can't possibly know every way someone will use Vexilla, but we would love to know about them. Help us build out a library of example projects that work in uncommon use-cases or possibly even with a tool we havent even considered an integration with, yet.

## Phrasing

According to Archer, phrasing is still a thing. We need help with it. i18n is only part of the problem to be solved. If phrasing is problematic we will put in the necessary effort to make sure that nobody feels excluded.

## Testing

There is always more to test. The Application needs Unit and E2E tests. The client SDKs for various languages need Unit and Integration tests.

## Third-Party  SDKS

It's the goal of Vexilla to have the largest collection of first-party client SDKs of any feature flagging tool. This is ambitious, but since the core of the runtime is just client SDKs, it makes sense to support as much as we can. This might be different if we had a server to maintain.

Our list of languages for Vexilla 1.x is fairly small at the moment. So it would be a huge help for members of the community to assist with updating the 0.x SDKs.

After that, we would love to support brand new languages that we have not supported before.
